<?xml version="1.0"?>
<doc>
    <assembly>
        <name>自动更新包生成工具</name>
    </assembly>
    <members>
        <member name="E:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.WorkerShutdown">
            <summary>
            构建已经完成（成功或失败）
            </summary>
        </member>
        <member name="E:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.WorkerInitialized">
            <summary>
            构建已经初始化
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.OnWorkerShutdown">
            <summary>
            引发 <see cref="E:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.WorkerShutdown" /> 事件
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.OnWorkerInitialized">
            <summary>
            引发 <see cref="E:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.WorkerInitialized" /> 事件
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.Build(System.String)">
            <summary>
            构建项目
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.UpdateProgress(FSLib.App.SimpleUpdater.Wrapper.RunworkEventArgs.ProgressIdentify)">
            <summary>
            构建进度发生变化
            </summary>
            <param name="progress"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.BuildSuccess(FSLib.App.SimpleUpdater.Generator.Defination.AuProject,System.Collections.Generic.Dictionary{System.String,System.String},FSLib.App.SimpleUpdater.Defination.UpdateInfo)">
            <summary>
            构建成功
            </summary>
            <param name="project"></param>
            <param name="packages"></param>
            <param name="resultUpdateInfo"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.BuilderFailed(FSLib.App.SimpleUpdater.Generator.Defination.AuProject,System.Exception,FSLib.App.SimpleUpdater.Defination.UpdateInfo)">
            <summary>
            构建失败
            </summary>
            <param name="project"></param>
            <param name="exception"></param>
            <param name="resultUpdateInfo"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.ConsoleBuildInterface.#ctor">
            <summary>
            创建 <see cref="T:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildInterface" />  的新实例(FormBuildInterface)
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildInterface.#ctor">
            <summary>
            创建 <see cref="T:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildInterface" />  的新实例(FormBuildInterface)
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildInterface.Build(System.String)">
            <summary>
            构建项目
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildInterface.OnWorkerShutdown">
            <summary>
            引发 <see cref="E:FSLib.App.SimpleUpdater.Generator.BuilderInterface.BuilderInterfaceBase.WorkerShutdown" /> 事件
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildUi.MiniBuildUi.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildUi.MiniBuildUi.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.BuilderInterface.FormBuildUi.MiniBuildUi.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Defination.AuProject">
            <summary>
            自动升级项目
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.#ctor">
            <summary>
            创建 <see cref="T:FSLib.App.SimpleUpdater.Generator.Defination.AuProject" />  的新实例(AuProject)
            </summary>
        </member>
        <member name="E:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.RequireGatherInfo">
            <summary>
            请求合成信息
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.OnRequireGatherInfo">
            <summary>
            引发 <see cref="E:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.RequireGatherInfo" /> 事件
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.UpdateInfo">
            <summary>
            获得更新信息
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.DefaultFileVerificationLevel">
            <summary>
            获得或设置默认的文件校验等级
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.DefaultUpdateMethod">
            <summary>
            获得或设置默认的更新模式
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.Files">
            <summary>
            获得活或设置文件列表
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.ProjectFilePath">
            <summary>
            获得项目文件路径
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.ProjectFolder">
            <summary>
            获得项目文件目录
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.ParseFullPath(System.String)">
            <summary>
            将路径转换为完成的路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.ToRelativePath(System.String)">
            <summary>
            将路径转换为相对于项目的路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.AllToRelativePath">
            <summary>
            将所有需要转换为相对地址的路径均进行转换
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.ApplicationDirectory">
            <summary>
            应用程序路径
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.DestinationDirectory">
            <summary>
            升级包路径
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.PublishUri">
            <summary>
            发布路径
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.PublishUserName">
            <summary>
            发布用户名
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.PublishPassword">
            <summary>
            发布密码
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.UpdateRtfNotePath">
            <summary>
            更新说明的RTF格式文件路径
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.CreateCompatiblePackage">
            <summary>
            获得或设置是否创建兼容的程序包
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.CompressPackage">
            <summary>
            获得或设置是否创建压缩版程序包
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.EnableIncreaseUpdate">
            <summary>
            获得或设置是否启用增量更新
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.VersionUpdateSrc">
            <summary>
            当前版本的更新源文件
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.UpdateContentSrc">
            <summary>
            获得或设置更新的内容源地址
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.PackageExtension">
            <summary>
            获得或设置升级文件的扩展名
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.LoadFile(System.String)">
            <summary>
            从指定的文件中加载项目
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.Save(System.String)">
            <summary>
            保存至指定的文件中
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.TryLoadUpdateInfo">
            <summary>
            尝试加载升级包信息
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.OpenXML(System.String)">
            <summary>
            打开配置文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.UseRandomPackageNaming">
            <summary>
            升级包随机命名
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.CleanBeforeBuild">
            <summary>
            构建之前先清理
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.AuProject.ComponentFlags">
            <summary>
            获得或设置组件标记
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Defination.FileTreeItem">
            <summary>
            用于编辑更新方式中的文件信息
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.FileTreeItem.RelativePath">
            <summary>
            获得相对路径
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Defination.ProjectItem">
            <summary>
            项目中的文件定义
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.ProjectItem.Path">
            <summary>
            获得或设置更新的路径
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.ProjectItem.UpdateMethod">
            <summary>
            获得或设置更新模式
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.ProjectItem.FileVerificationLevel">
            <summary>
            获得或设置更新的级别
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Defination.ServerNode">
            <summary>
            服务器节点
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.ServerNode.Name">
            <summary>
            获得或设置服务器节点名称
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.ServerNode.UrlTemplate">
            <summary>
            获得或设置下载文件地址模板
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Defination.ServerNode.TestUrl">
            <summary>
            获得或设置服务器速度测试地址
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Controls.AboutPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.AboutPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.AboutPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Controls.ArgumentGenerator.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.ArgumentGenerator.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.ArgumentGenerator.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.PreferFileName">
            <summary>
            获得或设置优先选择的文件名
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.RootPath">
            <summary>
            绑定到目录
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.FileTypeFilter">
            <summary>
            允许拖放的文件类型(多个之间用|隔开)
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.LoadFiles">
            <summary>
            加载文件列表
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.AddFileToList(System.String)">
            <summary>
            单独添加一个文件到列表,并返回对应的索引
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.SelectedFileName">
            <summary>
            获得或设置当前选中的文件名
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.SelectedFilePath">
            <summary>
            获得选中的文件
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.ShowEmptyEntry">
            <summary>
            获得或设置是否显示空行
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileComboBox.Items">
            <summary>
            获得列表
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileConfiguration.NewVersionFolder">
            <summary> 获得或设置最新版应用软件的目录 </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Controls.FileConfiguration.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileConfiguration.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileConfiguration.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.Files">
            <summary> 获得或设置当前的文件列表 </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.UpdateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.GetVersion(System.String,System.String)">
            <summary> 获得列表中指定文件的路径 </summary>
            <param name="pathkey" type="string">类型为 <see>System.String</see> 的参数</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.LoadFilesIntoList">
            <summary>
            将文件列表加入到显示列表中
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.UpdateVerificationLevelDesc(System.Windows.Forms.ListViewItem)">
            <summary> 更新指定项的检测方式 </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.UpdateUpdateMethodDesc(System.Windows.Forms.ListViewItem)">
            <summary> 更新指定项的检测方式 </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileListView.UpdateFlagDesc(System.Windows.Forms.ListViewItem)">
            <summary> 更新指定项的检测方式 </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.FileListViewSorter.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y. 
            </returns>
            <param name="y">The second object to compare. </param><param name="x">The first object to compare. </param><exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"/> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FileSysTree.Root">
            <summary> 获得或设置当前浏览的根路径 </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FolderNode.Files">
            <summary> 获得当前文件夹的文件 </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Controls.FolderNode.AllFiles">
            <summary>
            获得当前节点下的所有文件信息
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.OptionTab.RebindDefaultUpdateMethodInfo(FSLib.App.SimpleUpdater.Generator.Defination.AuProject)">
            <summary>
            重新绑定数据
            </summary>
            <param name="project"></param>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Controls.OptionTab.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.OptionTab.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Controls.OptionTab.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Dialogs.PackageGenerateResult.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Dialogs.PackageGenerateResult.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Dialogs.PackageGenerateResult.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Dialogs.SelectVerificationLevel.FileVerificationLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Dialogs.SelectVerificationLevel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Dialogs.SelectVerificationLevel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Dialogs.SelectVerificationLevel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.IsNullOrEmpty(System.String)">
            <summary>
            判断当前字符串是否为空或长度为零
            </summary>
            <param name="str">字符串</param>
            <returns>true为空或长度为零</returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.AddDataBinding``3(``0,``1,System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            添加一个数据源绑定
            </summary>
            <typeparam name="TControl"></typeparam>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="control"></param>
            <param name="source"></param>
            <param name="controlExpression"></param>
            <param name="propertyExpression"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.CompressBuffer(System.Byte[])">
            <summary>
            压缩指定文件
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.ToInt32(System.String,System.Int32)">
            <summary>
            将字符串转换为Int值
            </summary>
            <param name="value">字符串</param>
            <param name="defaultValue">如果转换失败,则返回的默认值</param>
            <returns>转换后的 <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.ToInt32(System.String)">
            <summary>
            将字符串转换为Int值
            </summary>
            <param name="value">字符串</param>
            <returns>转换后的 <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.XmlSerilizeToFile(System.Object,System.String)">
            <summary>
            序列化对象到文件
            </summary>
            <param name="objectToSerialize">要序列化的对象</param>
            <param name="FileName">保存到的目标文件</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.XmlSerializeToStream(System.Object,System.IO.Stream)">
            <summary>
            序列化指定对象到指定流中
            </summary>
            <param name="ObjectToSerialize">要序列化的对象</param>
            <param name="stream">目标流</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.XmlDeserializeFile(System.Type,System.String)">
            <summary>
            从指定的文件中反序列化对象
            </summary>
            <param name="type">目标类型</param>
            <param name="fileName">文件路径</param>
            <returns>反序列化的结果</returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.XmlDeserializeFromFile(System.String,System.Type)">
            <summary>
            从文件中反序列化指定类型的对象
            </summary>
            <param name="objType">反序列化的对象类型</param>
            <param name="FileName">文件名</param>
            <returns>对象</returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.XmlDeserializeFromStream``1(System.IO.Stream)">
            <summary>
            从流中反序列化对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="stream">流对象</param>
            <returns>反序列化结果</returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.XmlDeserializeFromStream(System.IO.Stream,System.Type)">
            <summary>
            从流中反序列化出指定对象类型的对象
            </summary>
            <param name="objType">对象类型</param>
            <param name="stream">流对象</param>
            <returns>反序列结果</returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.EnsureEndWith(System.String,System.String)">
            <summary>
            确认字符串是以指定字符串结尾的
            </summary>
            <param name="value">字符串</param>
            <param name="ending">结尾</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            对可遍历对象进行遍历并进行指定操作
            </summary>
            <typeparam name="T">遍历的类型</typeparam>
            <param name="enumberable">对象</param>
            <param name="predicate">函数委托</param>
            <exception cref="T:System.ArgumentNullException">predicate</exception>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.IsEmpty``1(``0[])">
            <summary>
            获得指定数组是否为空
            </summary>
            <typeparam name="T">数组类型</typeparam>
            <param name="array">要检测的数组</param>
            <returns>如果为空或长度为零的数组，则返回true</returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.IsIllegal(System.Version)">
            <summary>
            判断一个版本号是否是无效的
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.IsCompressedXmlFile(System.String)">
            <summary>
            测试一个文件是否是压缩的XML
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.Decompress(System.IO.Stream)">
            <summary>
            对一个流进行解压缩
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.DecompressFile(System.String)">
            <summary>
            解压缩一个文件为文件流
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.ToDisplayString(FSLib.App.SimpleUpdater.Defination.FileVerificationLevel)">
            <summary>
            获得显示的字符串
            </summary>
            <param name="fv"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.ExtensionMethods.ToDisplayString(FSLib.App.SimpleUpdater.Defination.UpdateMethod)">
            <summary>
            获得显示的字符串
            </summary>
            <param name="fv"></param>
            <returns></returns>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Main.PreloadFile">
            <summary>
            获得或设置加载时要打开的项目
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Main.AutoBuild">
            <summary>
            是否在打开项目后自动构建
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Main.InitEvents">
            <summary>
            初始化界面函数
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Main.btnOpen_Click(System.Object,System.EventArgs)">
            <summary>
            打开
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Main.btnCreate_Click(System.Object,System.EventArgs)">
            <summary>
            创建升级包
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Main.InitWorker">
            <summary>
            初始化线程类
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Main.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Main.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Main.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.PackageEventArgs">
            <summary>
            包事件对象
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.PackageEventArgs.AuProject">
            <summary>
            获得相关联的包
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.PackageEventArgs.#ctor(FSLib.App.SimpleUpdater.Generator.Defination.AuProject)">
            <summary>
            创建 <see cref="T:FSLib.App.SimpleUpdater.Generator.PackageEventArgs" />  的新实例(PackageEventArgs)
            </summary>
            <param name="auProject"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Program.Main(System.String[])">
            <summary>
            应用程序的主入口点。
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly
            when marked with <see cref="T:FSLib.App.SimpleUpdater.Generator.Annotations.MeansImplicitUseAttribute"/>
            or <see cref="T:FSLib.App.SimpleUpdater.Generator.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:FSLib.App.SimpleUpdater.Generator.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder
            within a web project. Path can be relative or absolute,
            starting from web root (~)
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC controller. If applied to a method,
            the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC partial view. If applied to a method,
            the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections
            for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.SR">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.SR.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.SR.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.SR.Program_Main_NoProjectFileSpecified">
            <summary>
              查找类似 错误：没有指定项目文件。 的本地化字符串。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.SR.UnableOpenProject">
            <summary>
              查找类似 无法打开构建项目 的本地化字符串。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.Instance">
            <summary>
            获得唯一实例
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.#ctor">
            <summary>
            实例构造函数
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.UpdateInfo">
            <summary>
            获得或设置当前的升级基础信息
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.BuiltUpdateInfo">
            <summary>
            获得已创建的更新项目
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.AuProject">
            <summary>
            获得当前的项目
            </summary>
        </member>
        <member name="E:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.ProjectLoaded">
            <summary>
            项目已加载
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.OnProjectLoaded(FSLib.App.SimpleUpdater.Generator.PackageEventArgs)">
            <summary>
            引发 <see cref="E:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.ProjectLoaded" /> 事件
            </summary>
            <param name="ea">包含此事件的参数</param>
        </member>
        <member name="E:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.ProjectClosed">
            <summary>
            项目已卸载
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.OnProjectClosed(FSLib.App.SimpleUpdater.Generator.PackageEventArgs)">
            <summary>
            引发 <see cref="E:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.ProjectClosed" /> 事件
            </summary>
            <param name="ea">包含此事件的参数</param>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.Result">
            <summary>
            获得或设置所有的结果
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.GetXmlFilePath(System.Boolean)">
            <summary>
            获得XML文件路径
            </summary>
            <param name="compressed"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.CompressFile(System.String,System.String)">
            <summary>
            压缩指定文件
            </summary>
            <param name="path"></param>
            <param name="destFile"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.CreateZip(System.String,System.String,System.String,FSLib.App.SimpleUpdater.Wrapper.RunworkEventArgs,System.Collections.Generic.KeyValuePair{System.String,System.IO.FileInfo}[])">
            <summary>
            创建压缩包
            </summary>
            <param name="zipFile"></param>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.AutoLoadInformations">
            <summary>
            自动从绑定的信息中绑定信息
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.CleanTargetDirectory">
            <summary>
            清理目标目录
            </summary>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.Build(FSLib.App.SimpleUpdater.Wrapper.RunworkEventArgs)">
            <summary>
            创建指定包
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.App.SimpleUpdater.Generator.UpdatePackageBuilder.BuildPackages(FSLib.App.SimpleUpdater.Wrapper.RunworkEventArgs,FSLib.App.SimpleUpdater.Defination.UpdateInfo)">
            <summary>
            创建指定包
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:FSLib.App.SimpleUpdater.Generator.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Properties.Resources.accept">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Properties.Resources.block_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Properties.Resources.info_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:FSLib.App.SimpleUpdater.Generator.Properties.Resources.tick_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
    </members>
</doc>
